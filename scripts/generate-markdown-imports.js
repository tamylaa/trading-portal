const fs = require('fs');
const path = require('path');
const { promisify } = require('util');

const readFile = promisify(fs.readFile);
const writeFile = promisify(fs.writeFile);
const readdir = promisify(fs.readdir);
const stat = promisify(fs.stat);

async function* walk(dir) {
  const files = await readdir(dir);
  for (const file of files) {
    const filePath = path.join(dir, file);
    const stats = await stat(filePath);
    
    if (stats.isDirectory()) {
      yield* walk(filePath);
    } else if (file.endsWith('.md')) {
      yield filePath;
    }
  }
}

async function generateMarkdownImports() {
  const contentDir = path.join(__dirname, '../src/stories/content/blog/dubai-free-zones-2025');
  const outputFile = path.join(__dirname, '../src/stories/content/blog/dubai-free-zones-2025/generated-content.ts');
  
  const imports = [];
  const contentMap = [];
  let index = 0;
  
  // Process each markdown file
  for await (const filePath of walk(contentDir)) {
    if (filePath.endsWith('generated-content.ts')) continue;
    
    const relativePath = path.relative(path.dirname(contentDir), filePath);
    const key = relativePath
      .replace(/\.[^/.]+$/, '')  // Remove extension
      .replace(/[\\/]/g, '_')     // Replace path separators with underscores
      .toLowerCase();
    
    const content = await readFile(filePath, 'utf8');
    const varName = `content_${index++}`;
    
    imports.push(`import ${varName} from './${relativePath.replace(/\\/g, '/')}?raw';`);
    contentMap.push(`  '${key}': ${varName},`);
  }
  
  // Generate the output file
  const output = [
    '// This file is auto-generated by scripts/generate-markdown-imports.js',
    '// Do not edit this file directly',
    '',
    ...imports,
    '',
    'const markdownContent = {',
    ...contentMap,
    '} as const;',
    '',
    'export type MarkdownContentKey = keyof typeof markdownContent;',
    'export const getMarkdownContent = (key: MarkdownContentKey): string => markdownContent[key] || "";',
    'export default markdownContent;',
    ''
  ].join('\n');
  
  await writeFile(outputFile, output, 'utf8');
  console.log(`Generated ${outputFile}`);
}

generateMarkdownImports().catch(console.error);
