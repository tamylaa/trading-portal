{"version":3,"file":"static/js/916.254d4674.chunk.js","mappings":"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","sources":["webpack://trading-portal/./src/components/enhanced/email/EmailComposer.module.css?c1e2","components/enhanced/email/EmailComposer.tsx","webpack://trading-portal/./src/components/enhanced/email/EnhancedEmailBlaster.module.css?7d1e","components/enhanced/email/EnhancedEmailBlaster.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"emailComposer\":\"EmailComposer_emailComposer__N+o9O\",\"header\":\"EmailComposer_header__Fs5Ph\",\"title\":\"EmailComposer_title__8Eqtq\",\"subtitle\":\"EmailComposer_subtitle__ERU2e\",\"formSection\":\"EmailComposer_formSection__qz2vn\",\"sectionTitle\":\"EmailComposer_sectionTitle__oewLQ\",\"sectionIcon\":\"EmailComposer_sectionIcon__Wyvy8\",\"recipientSection\":\"EmailComposer_recipientSection__oFMEO\",\"recipientInput\":\"EmailComposer_recipientInput__vnDz9\",\"recipientTags\":\"EmailComposer_recipientTags__8Kvq4\",\"recipientTag\":\"EmailComposer_recipientTag__SH7bg\",\"tagRemove\":\"EmailComposer_tagRemove__qpCG4\",\"templateSection\":\"EmailComposer_templateSection__I0kXk\",\"templateGrid\":\"EmailComposer_templateGrid__Z3MaS\",\"templateCard\":\"EmailComposer_templateCard__faZBH\",\"selected\":\"EmailComposer_selected__2h5YZ\",\"templateName\":\"EmailComposer_templateName__fHOff\",\"templateDescription\":\"EmailComposer_templateDescription__UWsN9\",\"templatePreview\":\"EmailComposer_templatePreview__sQjpw\",\"contentSection\":\"EmailComposer_contentSection__-AJ3l\",\"contentTabs\":\"EmailComposer_contentTabs__aDMbh\",\"contentTab\":\"EmailComposer_contentTab__FuhoZ\",\"active\":\"EmailComposer_active__fN0LL\",\"subjectInput\":\"EmailComposer_subjectInput__Zi0ty\",\"contentEditor\":\"EmailComposer_contentEditor__AfZPF\",\"editorToolbar\":\"EmailComposer_editorToolbar__tEwJ9\",\"toolbarButton\":\"EmailComposer_toolbarButton__56jVC\",\"contentTextarea\":\"EmailComposer_contentTextarea__cXpzG\",\"schedulingSection\":\"EmailComposer_schedulingSection__9x6z-\",\"schedulingOptions\":\"EmailComposer_schedulingOptions__W1TQT\",\"schedulingOption\":\"EmailComposer_schedulingOption__mJahb\",\"schedulingRadio\":\"EmailComposer_schedulingRadio__z3O4d\",\"schedulingLabel\":\"EmailComposer_schedulingLabel__5dJMe\",\"schedulingDescription\":\"EmailComposer_schedulingDescription__6mj4T\",\"dateTimeInputs\":\"EmailComposer_dateTimeInputs__dw0ws\",\"dateTimeInput\":\"EmailComposer_dateTimeInput__gCoc3\",\"actions\":\"EmailComposer_actions__sNJ2o\",\"actionGroup\":\"EmailComposer_actionGroup__1JZi6\",\"saveButton\":\"EmailComposer_saveButton__1QGNf\",\"previewButton\":\"EmailComposer_previewButton__M1ylM\",\"sendButton\":\"EmailComposer_sendButton__JQuNj\",\"scheduleButton\":\"EmailComposer_scheduleButton__2zfY3\",\"statusMessage\":\"EmailComposer_statusMessage__E75+q\",\"success\":\"EmailComposer_success__psytf\",\"error\":\"EmailComposer_error__f8tCx\",\"warning\":\"EmailComposer_warning__0m0HT\",\"info\":\"EmailComposer_info__zlqOS\",\"statusIcon\":\"EmailComposer_statusIcon__JcNky\",\"loading\":\"EmailComposer_loading__tWQgp\",\"loadingSpinner\":\"EmailComposer_loadingSpinner__yJISH\",\"spin\":\"EmailComposer_spin__DxVI5\"};","// Enhanced Email Composer - Modular component for composing emails\r\n// This replaces part of the large EmailBlaster.jsx functionality with focused, reusable component\r\n\r\nimport React, { useState, useCallback } from 'react';\r\nimport { EmailComposerProps } from '../index';\r\nimport styles from './EmailComposer.module.css';\r\n\r\nexport const EmailComposer: React.FC<EmailComposerProps> = ({\r\n  onSend,\r\n  initialContent = '',\r\n  className = '',\r\n  'data-testid': testId = 'email-composer',\r\n  ...props\r\n}) => {\r\n  const [subject, setSubject] = useState('');\r\n  const [content, setContent] = useState(initialContent);\r\n  const [attachments, setAttachments] = useState<File[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSend = useCallback(async () => {\r\n    if (!subject.trim() || !content.trim()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await onSend?.({\r\n        subject: subject.trim(),\r\n        content: content.trim(),\r\n        attachments,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to send email:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [subject, content, attachments, onSend]);\r\n\r\n  const handleFileAttachment = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n    if (files) {\r\n      setAttachments(prev => [...prev, ...Array.from(files)]);\r\n    }\r\n  }, []);\r\n\r\n  const removeAttachment = useCallback((index: number) => {\r\n    setAttachments(prev => prev.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  const isValid = subject.trim() && content.trim();\r\n\r\n  return (\r\n    <div \r\n      className={`${styles.emailComposer} ${className}`} \r\n      data-testid={testId}\r\n      {...props}\r\n    >\r\n      {/* Header */}\r\n      <div className={styles.header}>\r\n        <h3 className={styles.title}>Compose Email</h3>\r\n        <p className={styles.subtitle}>Create and send personalized emails</p>\r\n      </div>\r\n\r\n      {/* Subject Input */}\r\n      <div className={styles.formSection}>\r\n        <label htmlFor=\"email-subject\" className={styles.sectionTitle}>\r\n          Subject *\r\n        </label>\r\n        <input\r\n          id=\"email-subject\"\r\n          type=\"text\"\r\n          placeholder=\"Enter email subject\"\r\n          value={subject}\r\n          onChange={(e) => setSubject(e.target.value)}\r\n          className={styles.subjectInput}\r\n          data-testid=\"email-subject-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Content Section */}\r\n      <div className={styles.contentSection}>\r\n        <h4 className={styles.sectionTitle}>\r\n          Email Content *\r\n        </h4>\r\n        <div className={styles.contentEditor}>\r\n          <textarea\r\n            id=\"email-content\"\r\n            placeholder=\"Enter your email content...\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            className={styles.contentTextarea}\r\n            rows={12}\r\n            data-testid=\"email-content-textarea\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Attachments */}\r\n      <div className={styles.formSection}>\r\n        <label htmlFor=\"email-attachments\" className={styles.sectionTitle}>\r\n          Attachments\r\n        </label>\r\n        <input\r\n          id=\"email-attachments\"\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileAttachment}\r\n          className={styles.recipientInput}\r\n          data-testid=\"email-attachments-input\"\r\n        />\r\n        \r\n        {attachments.length > 0 && (\r\n          <div className={styles.recipientTags}>\r\n            {attachments.map((file, index) => (\r\n              <div key={`${file.name}-${index}`} className={styles.recipientTag}>\r\n                <span>{file.name}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => removeAttachment(index)}\r\n                  className={styles.tagRemove}\r\n                  aria-label={`Remove ${file.name}`}\r\n                >\r\n                  ×\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Footer with actions */}\r\n      <div className={styles.actions}>\r\n        <div className={styles.actionGroup}>\r\n          <span className={styles.subtitle}>\r\n            {content.length} characters\r\n            {attachments.length > 0 && ` • ${attachments.length} attachment${attachments.length !== 1 ? 's' : ''}`}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className={styles.actionGroup}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleSend}\r\n            disabled={!isValid || isLoading}\r\n            className={isLoading ? styles.loading : styles.sendButton}\r\n            data-testid=\"send-email-button\"\r\n          >\r\n            {isLoading && <span className={styles.loadingSpinner}></span>}\r\n            {isLoading ? 'Sending...' : 'Send Email'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"EnhancedEmailBlaster_container__xibF4\",\"header\":\"EnhancedEmailBlaster_header__jHzYs\",\"headerContent\":\"EnhancedEmailBlaster_headerContent__7qv35\",\"title\":\"EnhancedEmailBlaster_title__9HiJA\",\"subtitle\":\"EnhancedEmailBlaster_subtitle__JUN3T\",\"closeButton\":\"EnhancedEmailBlaster_closeButton__aVlFv\",\"tabs\":\"EnhancedEmailBlaster_tabs__BtqGA\",\"tab\":\"EnhancedEmailBlaster_tab__e0cnX\",\"tabActive\":\"EnhancedEmailBlaster_tabActive__WJKUL\",\"content\":\"EnhancedEmailBlaster_content__5luU6\",\"placeholder\":\"EnhancedEmailBlaster_placeholder__tL8yX\",\"loadingOverlay\":\"EnhancedEmailBlaster_loadingOverlay__LBY3q\",\"loadingSpinner\":\"EnhancedEmailBlaster_loadingSpinner__869se\",\"spinner\":\"EnhancedEmailBlaster_spinner__foTHp\",\"spin\":\"EnhancedEmailBlaster_spin__lsE0m\"};","// Enhanced EmailBlaster Container - Modular replacement for large EmailBlaster.jsx\r\n// Uses composition of smaller components while maintaining same API\r\n\r\nimport React, { useState, useCallback } from 'react';\r\nimport { EmailComposer } from './EmailComposer';\r\nimport { EnhancedEmailBlasterProps } from '../index';\r\nimport styles from './EnhancedEmailBlaster.module.css';\r\n\r\nexport const EnhancedEmailBlaster: React.FC<EnhancedEmailBlasterProps> = ({\r\n  onClose,\r\n  onSuccess,\r\n  onError,\r\n  mode = 'compose',\r\n  initialData,\r\n  className = '',\r\n  'data-testid': testId = 'enhanced-email-blaster',\r\n  ...props\r\n}) => {\r\n  const [activeMode, setActiveMode] = useState(mode);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleEmailSend = useCallback(async (emailData: any) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Use existing email API to maintain compatibility\r\n      const { emailApi } = require('../../../api/email');\r\n      \r\n      const result = await emailApi.sendEmail({\r\n        subject: emailData.subject,\r\n        message: emailData.content,\r\n        attachments: emailData.attachments || [],\r\n        timestamp: emailData.timestamp\r\n      });\r\n      \r\n      if (result.success) {\r\n        onSuccess?.(result);\r\n        // Optionally close after successful send\r\n        // onClose?.();\r\n      } else {\r\n        onError?.(new Error(result.error || 'Failed to send email'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Enhanced EmailBlaster send error:', error);\r\n      onError?.(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [onSuccess, onError]);\r\n\r\n  const handleClose = useCallback(() => {\r\n    if (isLoading) {\r\n      return; // Prevent closing while sending\r\n    }\r\n    onClose?.();\r\n  }, [onClose, isLoading]);\r\n\r\n  return (\r\n    <div \r\n      className={`${styles.container} ${className}`}\r\n      data-testid={testId}\r\n      {...props}\r\n    >\r\n      {/* Header with close button */}\r\n      <div className={styles.header}>\r\n        <div className={styles.headerContent}>\r\n          <h2 className={styles.title}>Email Campaign</h2>\r\n          <p className={styles.subtitle}>Enhanced email composition with better UX</p>\r\n        </div>\r\n        \r\n        <button \r\n          onClick={handleClose}\r\n          disabled={isLoading}\r\n          className={styles.closeButton}\r\n          aria-label=\"Close email composer\"\r\n          data-testid=\"close-email-blaster\"\r\n        >\r\n          ×\r\n        </button>\r\n      </div>\r\n\r\n      {/* Navigation tabs */}\r\n      <div className={styles.tabs}>\r\n        <button \r\n          className={`${styles.tab} ${activeMode === 'compose' ? styles.tabActive : ''}`}\r\n          onClick={() => setActiveMode('compose')}\r\n          disabled={isLoading}\r\n          data-testid=\"compose-tab\"\r\n        >\r\n          Compose\r\n        </button>\r\n        \r\n        <button \r\n          className={`${styles.tab} ${activeMode === 'templates' ? styles.tabActive : ''}`}\r\n          onClick={() => setActiveMode('templates')}\r\n          disabled={isLoading}\r\n          data-testid=\"templates-tab\"\r\n        >\r\n          Templates\r\n        </button>\r\n        \r\n        <button \r\n          className={`${styles.tab} ${activeMode === 'campaigns' ? styles.tabActive : ''}`}\r\n          onClick={() => setActiveMode('campaigns')}\r\n          disabled={isLoading}\r\n          data-testid=\"campaigns-tab\"\r\n        >\r\n          Campaigns\r\n        </button>\r\n        \r\n        <button \r\n          className={`${styles.tab} ${activeMode === 'contacts' ? styles.tabActive : ''}`}\r\n          onClick={() => setActiveMode('contacts')}\r\n          disabled={isLoading}\r\n          data-testid=\"contacts-tab\"\r\n        >\r\n          Contacts\r\n        </button>\r\n      </div>\r\n\r\n      {/* Content area */}\r\n      <div className={styles.content}>\r\n        {activeMode === 'compose' && (\r\n          <EmailComposer \r\n            onSend={handleEmailSend}\r\n            initialContent={initialData?.content || ''}\r\n            data-testid=\"email-composer-content\"\r\n          />\r\n        )}\r\n        \r\n        {activeMode === 'templates' && (\r\n          <div className={styles.placeholder} data-testid=\"templates-content\">\r\n            <h3>Email Templates</h3>\r\n            <p>Template management will be implemented in the next iteration.</p>\r\n            <p>This maintains the same tab structure as the original EmailBlaster.</p>\r\n          </div>\r\n        )}\r\n        \r\n        {activeMode === 'campaigns' && (\r\n          <div className={styles.placeholder} data-testid=\"campaigns-content\">\r\n            <h3>Campaign Management</h3>\r\n            <p>Campaign features will be implemented in the next iteration.</p>\r\n            <p>All existing campaign functionality is preserved in the original EmailBlaster.</p>\r\n          </div>\r\n        )}\r\n        \r\n        {activeMode === 'contacts' && (\r\n          <div className={styles.placeholder} data-testid=\"contacts-content\">\r\n            <h3>Contact Management</h3>\r\n            <p>Contact management will be implemented in the next iteration.</p>\r\n            <p>All existing contact functionality is preserved in the original EmailBlaster.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Loading overlay */}\r\n      {isLoading && (\r\n        <div className={styles.loadingOverlay} data-testid=\"loading-overlay\">\r\n          <div className={styles.loadingSpinner}>\r\n            <div className={styles.spinner}></div>\r\n            <p>Sending email...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"names":["EmailComposer","_ref","onSend","initialContent","className","testId","props","_objectWithoutProperties","_excluded","subject","setSubject","useState","content","setContent","attachments","setAttachments","isLoading","setIsLoading","handleSend","useCallback","async","trim","timestamp","Date","toISOString","error","console","handleFileAttachment","event","files","target","prev","Array","from","removeAttachment","index","filter","_","i","isValid","_jsxs","_objectSpread","concat","styles","children","_jsx","htmlFor","id","type","placeholder","value","onChange","e","rows","multiple","length","map","file","name","onClick","disabled","EnhancedEmailBlaster","onClose","onSuccess","onError","mode","initialData","activeMode","setActiveMode","handleEmailSend","emailApi","require","result","sendEmail","emailData","message","success","Error","handleClose"],"sourceRoot":""}